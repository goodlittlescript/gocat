#!/bin/bash
# usage: ./Projectfile [command]
export PACKAGE=goodlittlescript.com/gocat
export RELEASE_VERSION="prerelease"
export RELEASE_DATE="2020"

#
# workflow
#

images () {
  docker-compose build --compress --parallel
}

up () {
  docker-compose up --detach
}

shell () {
  up && docker-compose exec shell /bin/bash
}

down () {
  docker-compose stop
}

run () {
  docker-compose run --rm shell "$@"
}

show () {
  docker-compose ps
}

logs () {
  docker-compose logs -f
}

release () {
  RELEASE_VERSION="$1"
  RELEASE_DATE="$(date +"%Y-%m-%d")"

  # set new version
  sed -i "" \
    -e "s/RELEASE_VERSION=.*/RELEASE_VERSION=\"$RELEASE_VERSION\"/" \
    -e "s/RELEASE_DATE=.*/RELEASE_DATE=\"$RELEASE_DATE\"/" \
    ./Projectfile

  # generate manpages
  ./Projectfile manpages

  # print next steps
  cat >&2 <<DOC
Next steps:

  git status # double check your changes

  git commit -a -m "Release $RELEASE_VERSION"
  git push origin master

  git tag "v$RELEASE_VERSION"  
  git push origin --tags

A draft release will be created by GitHub Actions.  Take a look, write release
notes, and publish if desired.
DOC
}

#
# helpers
#

_lint () {
  gofmt -s -e -d .
}

_fix () {
  gofmt -s -w .
}

_test () {
  ./test/suite
}
 
_manpages () {
  mkdir -p man/man1
  ls cmd/*/MANPAGE.md |
  while read manpagemd
  do
    export COMMAND="$(basename "$(dirname "$manpagemd")")"
    cat cmd/MANPAGE_HEADER.md "$manpagemd" cmd/MANPAGE_FOOTER.md |
    envsubst '$COMMAND $RELEASE_VERSION $RELEASE_DATE' |
    pandoc --standalone -f markdown -t man - > "man/man1/$COMMAND.1"
  done
}

#
# utility  
#

list () {
  compgen -A function
}

unfunctions="$(compgen -A "function" | grep "^_")"
if command -v docker-compose >/dev/null 2>&1
then eval "$(awk '{sub("_","");print $1"() {\nrun ./Projectfile "$1"\n}\n"}' <<<"$unfunctions")"
else eval "$(declare -f $unfunctions | sed -e 's/^_//')"
fi
unset -f $unfunctions

if list | grep -qFx -- "${1:-}"
then "$@"
else
  if [ -z "$1" ]
  then printf "no command specified (try 'list')\n" >&2
  else printf "unknown command: %s\n" "$1" >&2
  fi
  exit 1
fi
